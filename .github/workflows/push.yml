name: ESP8266 Arduino CI

on:
  pull_request:


jobs:

  build-linux:
    name: Build ${{ matrix.chunk }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chunk: [0, 1, 2, 3, 4, 5, 6, 7]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Cache Linux toolchain
      id: cache-linux
      uses: actions/cache@v2
      with:
        path: ./tools/dist
        key: key-linux-toolchain
    - name: Build Sketches
      env:
        TRAVIS_BUILD_DIR: ${{ github.workspace }}
        TRAVIS_TAG: ${{ github.ref }}
        BUILD_PARITY: custom
        mod: 8
        rem: ${{ matrix.chunk }}
      run: |
        bash ./tests/build.sh


  build-debug-ipv6:
    name: Debug IPv6 ${{ matrix.chunk }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chunk: [0, 1, 2, 3, 4, 5, 6, 7]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Cache Linux toolchain
      id: cache-linux
      uses: actions/cache@v2
      with:
        path: ./tools/dist
        key: key-linux-toolchain
    - name: Build Sketches
      env:
        TRAVIS_BUILD_DIR: ${{ github.workspace }}
        TRAVIS_TAG: ${{ github.ref }}
        BUILD_PARITY: custom
        mod: 8
        rem: ${{ matrix.chunk }}
      run: |
        bash ./tests/debug6.sh


  build-windows:
    name: Windows
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Cache Windows toolchain
      id: cache-windows
      uses: actions/cache@v2
      with:
        path: ./tools/dist
        key: key-windows-toolchain
    - name: Build Sketch
      env:
        TRAVIS_BUILD_DIR: ${{ github.workspace }}
        TRAVIS_TAG: ${{ github.ref }}
        WINDOWS: 1
        BUILD_PARITY: custom
        mod: 500
        rem: 1
      run: |
        copy (get-command python).source (get-command python).source.Replace("python.exe", "python3.exe")
        bash ./tests/build.sh


  build-mac:
    name: Mac
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Cache Mac toolchain
      id: cache-mac
      uses: actions/cache@v2
      with:
        path: ./tools/dist
        key: key-mac-toolchain
    - name: Build Sketch
      env:
        TRAVIS_BUILD_DIR: ${{ github.workspace }}
        TRAVIS_TAG: ${{ github.ref }}
        MACOSX: 1
        BUILD_PARITY: custom
        mod: 500
        rem: 1
      run: |
        bash ./tests/build.sh


  build-pio:
    name: Build Platform.IO
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Build subset on Platform.IO
      env:
        TRAVIS_BUILD_DIR: ${{ github.workspace }}
        TRAVIS_TAG: ${{ github.ref }}
        BUILD_PARITY: custom
        mod: 42
        rem: 13
      run: |
        sudo apt-get install python3-pip python3-setuptools
        PATH=/home/runner/.local/bin:$PATH bash ./tests/platformio.sh


  host-tests:
    name: Host tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Run host tests
      env:
        TRAVIS_BUILD_DIR: ${{ github.workspace }}
        TRAVIS_TAG: ${{ github.ref }}
      run: |
        sudo apt-get install valgrind lcov
        bash ./tests/ci/host_test.sh


  documentation:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Build documentation
      env:
        TRAVIS_BUILD_DIR: ${{ github.workspace }}
        TRAVIS_TAG: ${{ github.ref }}
      run: |
        sudo apt-get install python3-pip python3-setuptools
        PATH=/home/runner/.local/bin:$PATH pip3 install --user -r doc/requirements.txt
        PATH=/home/runner/.local/bin:$PATH bash ./tests/ci/build_docs.sh


  style-check:
    name: Style and formatting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Style check
      env:
        TRAVIS_BUILD_DIR: ${{ github.workspace }}
        TRAVIS_TAG: ${{ github.ref }}
      run: |
          sudo apt-get install astyle
          bash ./tests/ci/style_check.sh


  mock-check:
    name: Mock trivial test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Mock build
      env:
        TRAVIS_BUILD_DIR: ${{ github.workspace }}
        TRAVIS_TAG: ${{ github.ref }}
      run: |
          bash ./tests/buildm.sh


  boards-check:
    name: Boards.txt check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Boards.txt diff
      env:
        TRAVIS_BUILD_DIR: ${{ github.workspace }}
        TRAVIS_TAG: ${{ github.ref }}
      run: |
          bash ./tests/ci/build_boards.sh
